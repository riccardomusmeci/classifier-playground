###### Datamodule ######
datamodule:
  class_map: {
    0: "class_a",
    1: "class_b"
  }
  imbalanced: true
  max_samples_per_class: 5000
  batch_size: 64
  shuffle: true
  num_workers: 5
  pin_memory: true
  drop_last: false
  persistent_workers: true

trainer:
  accelerator: gpu                                         
  devices: 1                                              
  max_epochs: 100
  precision: 16
  check_val_every_n_epoch: 1
  gradient_clip_val: null

###### Model ######
model:
  model_name: resnet18
  pretrained: true

###### Loss ###### 
loss:                                           
  name: xent                                  # name of the loss criterion to use
  weight: [.3, .7]                            # weight for each class in the loss computation (if dataset is imbalanced) 
  label_smoothing: 0.0                        # label smoothing factor -> to prevent model being overconfident (calibration)
  
###### Optimizer ######  
optimizer:
  name: adamw                                 # optimization algorithm (sgd, adam, adamw)
  lr: 0.001                                   # learning rate will be adapted to the rule (lr * batch_size / 256.)
  weight_decay: 1.5e-6                        # weight decay               

###### LR Scheduler ######
lr_scheduler:
  name: cosine_restarts                       # lr_scheduler name
  T_0: 5                                      # when to start cosine scheduling
  T_mult: 2                                   # multiplicative factor between restarting
  eta_min: 0                                  # min lr to reach
  
transform: 
  img_size: 224                               # input image size
  crop_resize_p: 0.5                          # crop and resize probabilty  
  mean: [0.485, 0.456, 0.406]                 # ImageNet mean normalization ([0.485, 0.456, 0.406])
  std: [0.229, 0.224, 0.225]                  # ImageNet std normalization ([0.229, 0.224, 0.225])
  brightness: 0.4                             # color jitter brightness
  contrast: 0.4                               # color jitter contrast
  saturation: 0.2                             # color jitter saturation
  hue: 0.1                                    # color jitter hue            
  color_jitter_p: 0.5                         # color jitter transformation probability
  grayscale_p: 0.2                            # grayscale transformation probabilty
  h_flip_p: 0.5                               # horizontal flip transformation probabilty
  kernel: [5, 5]                              # gaussian blur kernel size
  sigma: [.1, 2]                              # gaussian blur params
  solarization_p: 0.2                         # solarization probability
  solarize_t: 170                             # solarization threshold


##### Callbacks #####
callbacks:
  filename: epoch={epoch}-step={step}-val_loss={loss/val:.3f}-val_acc={acc/val:.3f}-val_f1={f1/val:.3f}-cal_err={cal_err/val:.5f}
  monitor: f1/val
  mode: max
  save_top_k: 10
  patience: 10